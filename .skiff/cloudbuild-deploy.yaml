steps:
- id: pull
  name: gcr.io/cloud-builders/docker
  entrypoint: /bin/bash
  args: [ -c, docker pull gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:latest || exit 0 ]

- id: build
  name: gcr.io/cloud-builders/docker
  args: [
    'build',
    '--file', 'app/Dockerfile',
    '--tag', 'gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:latest',
    '--tag', 'gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:$COMMIT_SHA',
    '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:latest',
    '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
    '--build-arg', 'SHADOW_APP_NAME=app.$_ENV',
    '.'
  ]
  waitFor: [ pull ]

- id: push
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:$COMMIT_SHA',
  ]
  waitFor: [ build ]

- id: 'config'
  name: 'gcr.io/ai2-reviz/jsonnet'
  args: [
    'eval',
    '-y',
    '--output-file', './webapp.yaml',
    '--tla-str', 'env=$_ENV',
    '--tla-str', 'image=gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:$COMMIT_SHA',
    '--tla-str', 'sha=$COMMIT_SHA',
    '--tla-str', 'cause=Automated Skiff Deploy SHA:$COMMIT_SHA BUILD:$BUILD_ID',
    '--tla-str', 'branch=$BRANCH_NAME',
    '--tla-str', 'repo=$REPO_NAME',
    '--tla-str', 'buildId=$BUILD_ID',
    './webapp.jsonnet'
  ]
  dir: '.skiff'

- id: 'deploy'
  name: 'gcr.io/ai2-reviz/rudder'
  args: [ 'deploy', '-f', 'webapp.yaml' ]
  dir: '.skiff'
  waitFor: [ push, config ]

substitutions:
  _ENV: hello_world

images: [
  'gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:$COMMIT_SHA',
  'gcr.io/$PROJECT_ID/$REPO_NAME-$_ENV:latest'
]

artifacts:
  objects:
    location: 'gs://skiff-archive/$REPO_NAME/$_ENV/$BUILD_ID/$COMMIT_SHA'
    paths: ['.skiff/webapp.yaml']

options:
  env:
    - "DOCKER_BUILDKIT=1"

timeout: 20m
